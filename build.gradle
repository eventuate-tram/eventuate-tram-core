buildscript {
    repositories {
        mavenCentral()
        maven {
          url "https://plugins.gradle.org/m2/"
        }
        jcenter()
        eventuateMavenRepoUrl.split(',').each { repoUrl -> maven { url repoUrl } }
    }
    dependencies {
        classpath "io.eventuate.plugins.gradle:eventuate-plugins-gradle-versions:$eventuatePluginsGradleVersion"
        classpath "io.eventuate.plugins.gradle:eventuate-plugins-gradle-publish:$eventuatePluginsGradleVersion"
        classpath "com.avast.gradle:gradle-docker-compose-plugin:0.12.0"
    }
}

apply plugin: 'docker-compose'

allprojects {
    group = "io.eventuate.tram.core"
}

apply plugin: WaitForCdcPlugin
apply plugin: "io.eventuate.plugins.gradle.publish.EventuatePublish"

allprojects {

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    repositories {
        mavenCentral()
        jcenter()
        maven { url "https://repo.spring.io/milestone" }
        eventuateMavenRepoUrl.split(',').each { repoUrl -> maven { url repoUrl } }
    }


    if (!project.name.endsWith("-bom")) {

      dependencies {
          testCompile "junit:junit:4.12"
          testCompile "org.mockito:mockito-core:2.23.4"
      }

    }
}


gradle.projectsEvaluated {
    task aggregateJavaDocs(type: Javadoc) {
        description = 'Aggregated Javadoc API documentation of all subprojects.'
        group = JavaBasePlugin.DOCUMENTATION_GROUP

        destinationDir file("$buildDir/docs/javadoc")
    }

    task("aggregateJavaDocsJar", type: org.gradle.api.tasks.bundling.Jar, dependsOn: project.aggregateJavaDocs) {
        classifier = 'javadoc'
        from 'build/docs/javadoc'
    }

    artifacts {
        archives project.aggregateJavaDocsJar
    }

}

dockerCompose {
    environment.put "EVENTUATE_COMMON_VERSION", eventuateCommonImageVersion
    environment.put "EVENTUATE_CDC_VERSION", eventuateCdcImageVersion

    removeOrphans = true

    mysqlbinlogkafka {
        projectName = null
        useComposeFiles = ["docker-compose-mysql-binlog-kafka.yml"]
    }

    mysqlbinlogredis {
        projectName = null
        useComposeFiles = ["docker-compose-mysql-binlog-redis.yml"]
    }

    mssqlpollingactivemq {
        projectName = null
        useComposeFiles = ["docker-compose-mssql-polling-activemq.yml"]
    }

    postgreswalkafka {
        projectName = null
        useComposeFiles = ["docker-compose-postgres-wal-kafka.yml"]
    }

    postgreswalrabbitmq {
        projectName = null
        useComposeFiles = ["docker-compose-postgres-wal-rabbitmq.yml"]
    }
}
